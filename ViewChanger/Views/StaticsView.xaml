<UserControl x:Class="ViewChanger.Views.StaticsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ViewChanger.Views"
             xmlns:vm="clr-namespace:ViewChanger.ViewModels"
             
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.DataContext>
        <vm:StatiticsViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <Style x:Key="ListViewStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>
    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="75*"></RowDefinition>
            <RowDefinition Height="303*"></RowDefinition>
            <RowDefinition Height="71*"></RowDefinition>


        </Grid.RowDefinitions>
        <Grid  Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="37*"></ColumnDefinition>
                <ColumnDefinition Width="123*"></ColumnDefinition>
                <ColumnDefinition Width="0*"></ColumnDefinition>

            </Grid.ColumnDefinitions>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Height="115" Margin="54,94,53.8,94.2" Width="77">
                <StackPanel.Resources>
                    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="BaseButtonStyle" TargetType="{x:Type RadioButton}">
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="IsEnabled" Value="False"/>
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!--<Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>-->
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </StackPanel.Resources>
                <RadioButton CommandParameter="All-categories" Command="{Binding CategorySelected,UpdateSourceTrigger=PropertyChanged}" Content="All Categories" Style="{StaticResource BaseButtonStyle}"/>
                <RadioButton CommandParameter="Animals" Command="{Binding CategorySelected}" Content="Animals" Style="{StaticResource BaseButtonStyle}"/>
                <RadioButton CommandParameter="Astronomy" Command="{Binding CategorySelected}" Content="Astronomy" Style="{StaticResource BaseButtonStyle}"/>
                <RadioButton CommandParameter="Cars" Command="{Binding CategorySelected}" Content="Cars" Style="{StaticResource BaseButtonStyle}"/>
                <RadioButton CommandParameter="Music" Command="{Binding CategorySelected}" Content="Movies" Style="{StaticResource BaseButtonStyle}"/>
                <RadioButton CommandParameter="Movies" Command="{Binding CategorySelected}" Content="Music" Style="{StaticResource BaseButtonStyle}"/>

            </StackPanel>


            <ListView  Grid.Column="1"  Margin="111.2,9,174,9.2" ItemsSource="{Binding Players, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Center" HorizontalContentAlignment="Center" Width="330">
                <ListView.View>
                    <GridView>
                        <GridViewColumn HeaderContainerStyle="{Binding Source={StaticResource ListViewStyle},UpdateSourceTrigger=PropertyChanged}" Header="Player Name" Width="100" DisplayMemberBinding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                        <GridViewColumn HeaderContainerStyle="{Binding Source={StaticResource ListViewStyle},UpdateSourceTrigger=PropertyChanged}" Header="Games Won" Width="100" DisplayMemberBinding="{Binding Wins, UpdateSourceTrigger=PropertyChanged}" />
                        <GridViewColumn HeaderContainerStyle="{Binding Source={StaticResource ListViewStyle},UpdateSourceTrigger=PropertyChanged}" Header="Games Lost" Width="100" DisplayMemberBinding="{Binding Loses, UpdateSourceTrigger=PropertyChanged}" />

                    </GridView>
                </ListView.View>

            </ListView>


        </Grid>

        <Label FontSize="40" Content="Statitics" HorizontalAlignment="Center"></Label>
        <Button Grid.Row="2" Width="100" Height="50" Command="{Binding goHomeCommand}">back</Button>
    </Grid>
</UserControl>
